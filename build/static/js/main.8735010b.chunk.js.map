{"version":3,"sources":["ideaLABlogo.png","components/dummyData.js","components/Queue/components/components/StatusDropdown.jsx","components/Queue/components/components/PrintDateAdded.jsx","components/Queue/components/PrintCardContainer.jsx","components/Queue/components/SearchBar.jsx","components/Queue/QueueContainer.jsx","components/Upload/UploadContainer.jsx","components/Login/LoginManager.jsx","components/CreateAccount/CreateAccountContainer.jsx","SidebarNavigation.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","id","name","email","color","dateAdded","status","fileName","position","comments","StatusDropdown","data","useState","printStatus","className","defaultValue","PrintDateAdded","dateDigit","dateAddedFull","Date","getMonth","getDay","getFullYear","PrintCardContainer","colorCircleStyle","backgroundColor","src","alt","style","SearchBar","filterByTerm","search","setSearch","value","onChange","event","target","type","placeholder","QueueContainer","dummyData","filteredData","setFilteredData","stringedValues","setStringedValues","totalJobsInWaiting","length","useEffect","filteredKeys","searchValues","map","printJob","index","valueString","key","indexOf","toLowerCase","renderPrintCards","el","i","searchTerm","filteredSearch","filter","UploadContainer","LoginManager","setEmail","password","setPassword","ideaLABlogo","onSubmit","e","preventDefault","autoComplete","autoFocus","SidebarNavigation","props","to","activeClassName","onClick","this","logout","React","Component","App","sidebar","exact","path","component","CreateAccountContainer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,yC,wRCC3C,GACK,CACIC,GAAI,SACJC,KAAM,UACNC,MAAO,kBACPC,MAAO,QACPC,UAAW,aACXC,OAAQ,WACRC,SAAU,oBACVC,SAAU,IACVC,SAAU,IAEd,CACGR,GAAI,SACJC,KAAM,QACNC,MAAO,2BACPC,MAAO,MACPC,UAAW,cACXC,OAAQ,WACRC,SAAU,kBACVC,SAAU,IACVC,SAAU,IAEd,CACIR,GAAI,SACJC,KAAM,kBACNC,MAAO,iBACPC,MAAO,OACPC,UAAW,cACXC,OAAQ,WACRC,SAAU,cACVC,SAAU,IACVC,SAAU,IAEd,CACIR,GAAI,SACJC,KAAM,kBACNC,MAAO,iBACPC,MAAO,OACPC,UAAW,aACXC,OAAQ,WACRC,SAAU,cACVC,SAAU,IACVC,SAAU,IAEd,CACIR,GAAI,SACJC,KAAM,SACNC,MAAO,kBACPC,MAAO,QACPC,UAAW,cACXC,OAAQ,WACRC,SAAU,kBACVC,SAAU,IACVC,SAAU,KCtCHC,G,YAdQ,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAAU,EACMC,mBAASD,EAAKL,QADpB,mBACxBO,EADwB,UAI/B,OACI,yBAAKC,UAAU,kBACX,4BAAQA,UAAU,uBAAuBZ,KAAK,cAAca,aAAcF,GACtE,4CACA,gDCGDG,EAZQ,SAAC,GAAY,IAC1BC,EADyB,EAAVN,KACEN,UACjBa,EAAgB,IAAIC,KAAKF,GACzBZ,EAAS,UAAMa,EAAcE,WAApB,YAAkCF,EAAcG,SAAhD,YAA4DH,EAAcI,eAEzF,OACI,6BACKjB,ICuBEkB,EA3BY,SAAC,GAAY,IAAXZ,EAAU,EAAVA,KACnBa,EAAmB,CACrBC,gBAAgB,GAAD,OAAKd,EAAKP,QAG7B,OACI,yBAAKU,UAAU,sBACX,yBAAKY,IAAI,IAAIC,IAAI,UAAUb,UAAU,UACrC,yBAAKA,UAAU,uBACX,2BAAIH,EAAKJ,WAEb,yBAAKO,UAAU,SACX,yBAAKA,UAAU,cAAcc,MAAOJ,KAExC,yBAAKV,UAAU,oBACX,kBAAC,EAAD,CAAgBH,KAAMA,KAE1B,6BACI,kBAAC,EAAD,CAAgBA,KAAMA,KAE1B,yBAAKG,UAAU,6BACX,yBAAKa,IAAI,eCHVE,G,MArBG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EACXlB,mBAAS,IADE,mBAChCmB,EADgC,KACxBC,EADwB,KAQvC,OACO,yBAAKlB,UAAU,oBACf,2BACIA,UAAU,aACVmB,MAAOF,EACPG,SAVY,SAACC,GACjBH,EAAUG,EAAMC,OAAOH,OACvBH,EAAaK,EAAMC,OAAOH,QAStBI,KAAK,OACLC,YAAY,cCsCTC,EAjDQ,WAAO,IAAD,EACJ3B,mBAAS4B,GADL,mBACrB7B,EADqB,aAEYC,mBAASD,IAFrB,mBAErB8B,EAFqB,KAEPC,EAFO,OAGgB9B,mBAAS,IAHzB,mBAGrB+B,EAHqB,KAGLC,EAHK,KAIxBC,EAAqBlC,EAAKmC,OAE9BC,oBAAU,WACT,IAAMC,EAAe,CAAC,OAAQ,QAAS,QAAS,SAAU,WAAY,YAChEC,EAAetC,EAAKuC,IAAI,SAACC,EAAUC,GAClC,IAAIC,EAAc,GACf,IAAK,IAAIC,KAAOH,GACuB,IAA/BH,EAAaO,QAAQD,KACrBD,EAAcA,EAAc,IAAMF,EAASG,IAGnD,OAAOH,EAASC,GAASC,EAAYG,gBAE/CZ,EAAkBK,IAChB,CAACtC,IAEJ,IAOM8C,EAAmBhB,EAAaS,IAAI,SAACQ,EAAIC,GAAL,OACzC,kBAAC,EAAD,CAAoBhD,KAAM+C,EAAIJ,IAAKK,MAGpC,OACC,6BACC,yBAAK7C,UAAU,mBACd,6BAAM+B,EAAN,kBACA,kBAAC,EAAD,CAAWf,aAfO,SAAC8B,GACrB,IAAMC,EAAiBlD,EAAKmD,OAAO,SAACX,EAAUQ,GAC7C,OAAgE,IAAzDhB,EAAegB,GAAGJ,QAAQK,EAAWJ,iBAE7Cd,EAAgBmB,OAaf,wBAAI/C,UAAU,UACb,wBAAIA,UAAU,UACd,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,SACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,WAEA2C,IC3BWM,MArBf,WACE,OACE,6BACE,8BACE,2BACE1B,KAAK,OACLpC,GAAG,OACHqC,YAAY,SACd,2BACED,KAAK,OACLpC,GAAG,QACHqC,YAAY,UACd,8BACErC,GAAG,WACHqC,YAAY,aACd,4BAAQD,KAAK,UAAb,a,yBCwBO2B,EApCM,WAAO,IAAD,EACApD,mBAAS,IADT,mBACnBT,EADmB,KACZ8D,EADY,OAEMrD,mBAAS,IAFf,mBAEnBsD,EAFmB,KAETC,EAFS,KAQ1B,OACC,yBAAKrD,UAAU,aACd,yBAAKY,IAAK0C,IAAazC,IAAI,gBAC3B,4DACA,uCACA,0BAAM0C,SAAU,SAAAC,GAAC,OATF,SAAAA,GAChBA,EAAEC,iBAQoBF,CAASC,KAC7B,2BACCpE,KAAK,QACLoC,YAAY,QACZkC,aAAa,MACbC,WAAS,EACTxC,MAAO9B,EACP+B,SAAU,SAAAoC,GAAC,OAAIL,EAASK,EAAElC,OAAOH,UAElC,2BACC/B,KAAK,WACLoC,YAAY,WACZD,KAAK,WACLmC,aAAa,MACbvC,MAAOiC,EACPhC,SAAU,SAAAoC,GAAC,OAAIH,EAAYG,EAAElC,OAAOH,UAErC,4BAAQI,KAAK,UAAb,cCkBW2B,G,MAhDM,WACpB,IAD0B,EAKApD,mBAAS,IALT,mBAKnBT,EALmB,KAKZ8D,EALY,OAMMrD,mBAAS,IANf,mBAMnBsD,EANmB,KAMTC,EANS,KAQ1B,OACC,yBAAKrD,UAAU,aACd,yBAAKA,UAAU,QACd,yBAAKY,IAAK0C,IAAazC,IAAI,gBAC3B,4DACA,iDACA,0BAAM0C,SAAU,SAAAC,GAAC,OAbH,SAAAA,GAChBA,EAAEC,iBAYqBF,CAASC,KAC7B,2BACCpE,KAAK,QACLoC,YAAY,QACZkC,aAAa,MACbC,WAAS,EACTxC,MAAO9B,EACP+B,SAAU,SAAAoC,GAAC,OAAIL,EAASK,EAAElC,OAAOH,UAElC,2BACC/B,KAAK,WACLoC,YAAY,WACZD,KAAK,WACLmC,aAAa,MACbvC,MAAOiC,EACPhC,SAAU,SAAAoC,GAAC,OAAIH,EAAYG,EAAElC,OAAOH,UAErC,2BACC/B,KAAK,WACLoC,YAAY,mBACZD,KAAK,WACLmC,aAAa,MACbvC,MAAOiC,EACPhC,SAAU,SAAAoC,GAAC,OAAIH,EAAYG,EAAElC,OAAOH,UAErC,4BAAQI,KAAK,UAAb,mBAED,uDAA6BlC,GAC7B,0DAAgC+D,O,+CCvBrBQ,E,YAnBd,WAAYC,GAAQ,qEACbA,I,sEAIA,OACI,yBAAK7D,UAAW,iBACZ,wBAAIA,UAAW,WACX,4BAAI,kBAAC,IAAD,CAAS8D,GAAG,UAAUC,gBAAiB,YAAvC,WACJ,4BAAI,kBAAC,IAAD,CAASD,GAAG,SAASC,gBAAiB,YAAtC,UACJ,4BAAI,kBAAC,IAAD,CAASD,GAAG,kBAAkBC,gBAAiB,YAA/C,oBACJ,4BAAI,kBAAC,IAAD,CAASD,GAAG,aAAaC,gBAAiB,YAA1C,cACJ,wBAAIC,QAASC,KAAKJ,MAAMK,QAAQ,kBAAC,IAAD,CAASJ,GAAG,SAASC,gBAAiB,YAAtC,kB,GAbpBI,IAAMC,W,OCuBvBC,MAlBf,WACE,IACMC,EAAuB,kBAAC,EAAD,MAC7B,OACE,yBAAKtE,UAAU,sBACb,kBAAC,IAAD,KACGsE,EACH,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWhD,IACtC,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,UAAUC,UAAWxB,IACvC,kBAAC,IAAD,CAAOuB,KAAK,SAASC,UAAWvB,IAChC,kBAAC,IAAD,CAAOsB,KAAK,WAAWC,UAAWC,QCRtBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.8735010b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ideaLABlogo.1eb57a71.png\";","export default\n[\n     {\n         id: 'abc123',\n         name: 'Alfie A',\n         email: 'aabrams@aol.com',\n         color: 'green',\n         dateAdded: 1310669017000,\n         status: 'QUEUEING',\n         fileName: 'statue_of_lib.stl',\n         position: 100,\n         comments: '',\n     },\n     {\n        id: 'def456',\n        name: 'Betsy',\n        email: 'betsy.brahm@bombbomb.com',\n        color: 'red',\n        dateAdded: 1566226114628,\n        status: 'QUEUEING',\n        fileName: 'spaceneedle.stl',\n        position: 200,\n        comments: '',\n    },\n    {\n        id: 'ghi789',\n        name: 'Cee Cee Chaplin',\n        email: 'cdef@gmail.com',\n        color: 'blue',\n        dateAdded: 1566226214092,\n        status: 'QUEUEING',\n        fileName: 'stlArch.stl',\n        position: 300,\n        comments: '',\n    },\n    {\n        id: 'ghi789',\n        name: 'Cee Cee Chaplin',\n        email: 'cdef@gmail.com',\n        color: 'blue',\n        dateAdded: 1566033724000,\n        status: 'QUEUEING',\n        fileName: 'ORFalls.stl',\n        position: 400,\n        comments: '',\n    },\n    {\n        id: 'jkl012',\n        name: 'Darius',\n        email: 'ddunkin@dsu.edu',\n        color: 'green',\n        dateAdded: 1566228092314,\n        status: 'PRINTING',\n        fileName: 'CalRedwoods.stl',\n        position: 500,\n        comments: '',\n    },\n ];","import React, {useState} from 'react'\nimport './StatusDropdown.css'\n\nconst StatusDropdown = ({data}) => {\n    const [printStatus,setPrintStatus] = useState(data.status);\n    const badMessage = 'Not functioning correctly...'\n\n    return (\n        <div className='statusDropdown'>\n            <select className='statusDropdownSelect' name='printStatus' defaultValue={printStatus}>\n                <option>PRINTING</option>\n                <option>QUEUEING</option>\n            </select>\n        </div>\n    )\n}\n\nexport default StatusDropdown\n","import React from 'react'\n\nconst PrintDateAdded = ({data}) => {\n    const dateDigit = data.dateAdded;\n    const dateAddedFull = new Date(dateDigit);\n    const dateAdded = `${dateAddedFull.getMonth()}/${dateAddedFull.getDay()}/${dateAddedFull.getFullYear()}`\n\n    return (\n        <div>\n            {dateAdded}\n        </div>\n    )\n}\n\nexport default PrintDateAdded\n","import React, { useState } from 'react';\nimport './PrintCardContainer.css';\nimport StatusDropdown from './components/StatusDropdown';\nimport PrintDateAdded from './components/PrintDateAdded';\n\nconst PrintCardContainer = ({data}) => {\n    const colorCircleStyle = {\n        backgroundColor: `${data.color}`\n    };\n\n    return (\n        <div className='printCardContainer'>\n            <img src='#' alt='hamLogo' className='col10'/>\n            <div className='printFileName col20'>\n                <p>{data.fileName}</p>\n            </div>\n            <div className='col20'>\n                <div className='colorCircle' style={colorCircleStyle}></div>\n            </div>\n            <div className='submitDate col20'>\n                <PrintDateAdded data={data}/>\n            </div>\n            <div>\n                <StatusDropdown data={data}/>\n            </div>\n            <div className='printAdditionalInfo col20'>\n                <img alt='arrLogo'/>\n            </div>\n        </div>\n  );\n};\n\nexport default PrintCardContainer;\n","import React, { useState } from 'react';\n\nconst SearchBar = ({ filterByTerm }) => {\n\tconst [search, setSearch] = useState('');\n\n    const searchQuery = (event) => {\n        setSearch(event.target.value);\n        filterByTerm(event.target.value);\n    }\n\n\treturn (\n        <div className='search-container'>\n        <input\n            className='search-bar'\n            value={search}\n            onChange={searchQuery}\n            type='text'\n            placeholder='Search'\n        />\n        </div>\n\t);\n};\n\nexport default SearchBar;\n\n\n","import React, { useState, useEffect } from 'react';\nimport dummyData from '../dummyData';\nimport PrintCardContainer from './components/PrintCardContainer';\nimport './QueueContainer.css';\nimport SearchBar from './components/SearchBar';\n\nconst QueueContainer = () => {\n\tconst [data, setData] = useState(dummyData);\n\tconst [filteredData, setFilteredData] = useState(data);\n\tconst [stringedValues, setStringedValues] = useState([]);\n\tlet totalJobsInWaiting = data.length;\n\n\tuseEffect(() => {\n\t\tconst filteredKeys = ['name', 'email', 'color', 'status', 'fileName', 'comments'];\n\t\tconst searchValues = data.map((printJob, index) => {\n        \tlet valueString = '';\n            for (var key in printJob) {\n                if (filteredKeys.indexOf(key) !== -1) {\n                    valueString = valueString + ' ' + printJob[key];\n                }\n            }\n            return printJob[index] = valueString.toLowerCase();\n        });\n\t\tsetStringedValues(searchValues);\n\t}, [data]);\n\n\tconst filterByTerm = (searchTerm) => {\n\t\tconst filteredSearch = data.filter((printJob, i) => {\n\t\t\treturn stringedValues[i].indexOf(searchTerm.toLowerCase()) !== -1;\n\t\t});\n\t\tsetFilteredData(filteredSearch);\n\t}\n\n\tconst renderPrintCards = filteredData.map((el, i) => (\n\t\t<PrintCardContainer data={el} key={i} />\n\t));\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='queueFilterInfo'>\n\t\t\t\t<div>{totalJobsInWaiting} jobs in queue</div>\n\t\t\t\t<SearchBar filterByTerm={filterByTerm} />\n\t\t\t</div>\n\t\t\t<ul className='banner'>\n\t\t\t\t<li className='col10'></li>\n\t\t\t\t<li className='col20'>File Name</li>\n\t\t\t\t<li className='col20'>Color</li>\n\t\t\t\t<li className='col20'>Submitted</li>\n\t\t\t\t<li className='col20'>Status</li>\n\t\t\t</ul>\n\t\t\t{renderPrintCards}\n\t\t</div>\n\t);\n};\n\nexport default QueueContainer;\n","import React from 'react';\n\nfunction UploadContainer(){\n  return (\n    <div>\n      <form>\n        <input\n          type='text'\n          id='name'\n          placeholder='Name'/>\n        <input\n          type='text'\n          id='color'\n          placeholder='Color'/>\n        <textarea\n          id='comments'\n          placeholder='Comments'/>\n        <button type='submit'>SUMBIT</button>\n      </form>\n    </div>\n  );\n}\n\nexport default UploadContainer;","import React, { useState } from 'react';\nimport './LoginManager.css';\n\nimport ideaLABlogo from './../../ideaLABlogo.png';\n\nconst LoginManager = () => {\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\n\tconst onSubmit = e => {\n\t\te.preventDefault();\n\t};\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<img src={ideaLABlogo} alt='ideaLABLogo' />\n\t\t\t<h4>3D Printing and Upload Queue</h4>\n\t\t\t<h2>Sign In</h2>\n\t\t\t<form onSubmit={e => onSubmit(e)}>\n\t\t\t\t<input\n\t\t\t\t\tname='email'\n\t\t\t\t\tplaceholder='email'\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t\tautoFocus\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={e => setEmail(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tname='password'\n\t\t\t\t\tplaceholder='password'\n\t\t\t\t\ttype='password'\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t\tvalue={password}\n\t\t\t\t\tonChange={e => setPassword(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<button type='submit'>SIGN IN</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default LoginManager;\n","import React, { useState } from 'react';\nimport './CreateAccountContainer.css';\n\nimport ideaLABlogo from './../../ideaLABlogo.png';\n\nconst LoginManager = () => {\n\tconst onSubmit = e => {\n\t\te.preventDefault();\n\t};\n\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\n\treturn (\n\t\t<div className='container'>\n\t\t\t<div className='card'>\n\t\t\t\t<img src={ideaLABlogo} alt='ideaLABLogo' />\n\t\t\t\t<h1>3D Printing and Upload Queue</h1>\n\t\t\t\t<h2>Create an Account</h2>\n\t\t\t\t<form onSubmit={e => onSubmit(e)}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname='email'\n\t\t\t\t\t\tplaceholder='email'\n\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={e => setEmail(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\tplaceholder='password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\tname='password'\n\t\t\t\t\t\tplaceholder='confirm password'\n\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<button type='submit'>Create Account</button>\n\t\t\t\t</form>\n\t\t\t\t<p>This is the email state: {email}</p>\n\t\t\t\t<p>This is the password state: {password}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default LoginManager;\n","import React from 'react';\nimport './App.css';\nimport { NavLink } from 'react-router-dom';\n\nclass SidebarNavigation extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n    render() {\n        return (\n            <nav className={\"grid-item-nav\"}>\n                <ul className={\"navList\"}>\n                    <li><NavLink to=\"/upload\" activeClassName={\"selected\"}>upload</NavLink></li>\n                    <li><NavLink to=\"/queue\" activeClassName={\"selected\"}>queue</NavLink></li>\n                    <li><NavLink to=\"/manageaccounts\" activeClassName={\"selected\"}>manage accounts</NavLink></li>\n                    <li><NavLink to=\"/analytics\" activeClassName={\"selected\"}>analytics</NavLink></li>\n                    <li onClick={this.props.logout}><NavLink to=\"/login\" activeClassName={\"selected\"}>log out</NavLink></li>\n                </ul>\n            </nav>\n        );\n    }\n}\n\nexport default SidebarNavigation;\n","import React from 'react';\nimport './App.css';\nimport QueueContainer from './components/Queue/QueueContainer';\nimport UploadContainer from './components/Upload/UploadContainer';\nimport LoginManager from './components/Login/LoginManager';\nimport CreateAccountContainer from './components/CreateAccount/CreateAccountContainer';\nimport SidebarNavigation from './SidebarNavigation';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  const activeUser = 'admin';\n  const sidebar = activeUser ? <SidebarNavigation /> : null;\n  return (\n    <div className=\"App grid-container\">\n      <HashRouter>\n        {sidebar}\n      <Switch>\n        <Route exact path=\"/queue\" component={QueueContainer} />\n        <Route exact path=\"/upload\" component={UploadContainer} />\n        <Route path=\"/login\" component={LoginManager} />\n        <Route path='/account' component={CreateAccountContainer} />\n      </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}