{"ast":null,"code":"import _slicedToArray from \"/Users/JMcGehee/Documents/code_for_denver/ideaLab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/JMcGehee/Documents/code_for_denver/ideaLab/src/components/Queue/QueueContainer.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport dummyData from '../dummyData';\nimport PrintCardContainer from './components/PrintCardContainer';\nimport './QueueContainer.css';\nimport SearchBar from './components/SearchBar';\n\nconst QueueContainer = () => {\n  const _useState = useState(dummyData),\n        _useState2 = _slicedToArray(_useState, 1),\n        data = _useState2[0];\n\n  const _useState3 = useState(data),\n        _useState4 = _slicedToArray(_useState3, 2),\n        filteredData = _useState4[0],\n        setFilteredData = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stringedValues = _useState6[0],\n        setStringedValues = _useState6[1];\n\n  const _useState7 = useState('QUEUEING'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        statusView = _useState8[0],\n        setStatusView = _useState8[1];\n\n  useEffect(() => {\n    const filteredKeys = ['name', 'email', 'color', 'status', 'fileName', 'comments'];\n    const searchValues = data.map((printJob, index) => {\n      let valueString = '';\n\n      for (var key in printJob) {\n        if (filteredKeys.indexOf(key) !== -1) {\n          valueString = valueString + ' ' + printJob[key];\n        }\n      }\n\n      return printJob[index] = valueString.toLowerCase();\n    });\n    const queuedCards = data.filter(card => card.status === statusView);\n    setFilteredData(queuedCards);\n    setStringedValues(searchValues);\n  }, [data, statusView]);\n\n  const filterByTerm = searchTerm => {\n    const filteredSearch = data.filter((printJob, i) => {\n      return stringedValues[i].indexOf(searchTerm.toLowerCase()) !== -1;\n    });\n    setFilteredData(filteredSearch);\n  };\n\n  const renderPrintCards = filteredData.map((el, i) => React.createElement(PrintCardContainer, {\n    data: el,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"queueFilterInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"statusMenu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Queue |\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Recently Completed |\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"In Progress\")), React.createElement(SearchBar, {\n    filterByTerm: filterByTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    className: \"banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"col10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"li\", {\n    className: \"col20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"File Name\"), React.createElement(\"li\", {\n    className: \"col20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Color\"), React.createElement(\"li\", {\n    className: \"col20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Submitted\"), React.createElement(\"li\", {\n    className: \"col20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Status\")), renderPrintCards);\n};\n\nexport default QueueContainer;","map":{"version":3,"sources":["/Users/JMcGehee/Documents/code_for_denver/ideaLab/src/components/Queue/QueueContainer.jsx"],"names":["React","useState","useEffect","dummyData","PrintCardContainer","SearchBar","QueueContainer","data","filteredData","setFilteredData","stringedValues","setStringedValues","statusView","setStatusView","filteredKeys","searchValues","map","printJob","index","valueString","key","indexOf","toLowerCase","queuedCards","filter","card","status","filterByTerm","searchTerm","filteredSearch","i","renderPrintCards","el"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport dummyData from '../dummyData';\nimport PrintCardContainer from './components/PrintCardContainer';\nimport './QueueContainer.css';\nimport SearchBar from './components/SearchBar';\n\nconst QueueContainer = () => {\n\tconst [data] = useState(dummyData);\n\tconst [filteredData, setFilteredData] = useState(data);\n\tconst [stringedValues, setStringedValues] = useState([]);\n\tconst [statusView, setStatusView] = useState('QUEUEING');\n\n\tuseEffect(() => {\n\t\tconst filteredKeys = ['name', 'email', 'color', 'status', 'fileName', 'comments'];\n\t\tconst searchValues = data.map((printJob, index) => {\n        \tlet valueString = '';\n            for (var key in printJob) {\n                if (filteredKeys.indexOf(key) !== -1) {\n                    valueString = valueString + ' ' + printJob[key];\n                }\n            }\n            return printJob[index] = valueString.toLowerCase();\n        });\n\t\tconst queuedCards = data.filter(card => card.status === statusView);\n\t\tsetFilteredData(queuedCards);\n\t\tsetStringedValues(searchValues);\n\t}, [data, statusView]);\n\n\tconst filterByTerm = (searchTerm) => {\n\t\tconst filteredSearch = data.filter((printJob, i) => {\n\t\t\treturn stringedValues[i].indexOf(searchTerm.toLowerCase()) !== -1;\n\t\t});\n\t\tsetFilteredData(filteredSearch);\n\t}\n\n\tconst renderPrintCards = filteredData.map((el, i) => (\n\t\t<PrintCardContainer data={el} key={i} />\n\t));\n\n\treturn (\n\t\t<div>\n\t\t\t<div className='queueFilterInfo'>\n\t\t\t\t<div className='statusMenu'>\n\t\t\t\t\t<button>Queue |</button>\n\t\t\t\t\t<button>Recently Completed |</button>\n\t\t\t\t\t<button>In Progress</button>\n\t\t\t\t</div>\n\t\t\t\t<SearchBar filterByTerm={filterByTerm} />\n\t\t\t</div>\n\t\t\t<ul className='banner'>\n\t\t\t\t<li className='col10'></li>\n\t\t\t\t<li className='col20'>File Name</li>\n\t\t\t\t<li className='col20'>Color</li>\n\t\t\t\t<li className='col20'>Submitted</li>\n\t\t\t\t<li className='col20'>Status</li>\n\t\t\t</ul>\n\t\t\t{renderPrintCards}\n\t\t</div>\n\t);\n};\n\nexport default QueueContainer;\n"]},"metadata":{},"sourceType":"module"}