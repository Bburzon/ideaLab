{"ast":null,"code":"import _slicedToArray from \"/Users/JMcGehee/Documents/code_for_denver/ideaLab/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/JMcGehee/Documents/code_for_denver/ideaLab/src/components/Queue/components/SearchBar.jsx\";\nimport React, { useState } from 'react';\n\nconst SearchBar = ({\n  filterByTerm\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        search = _useState2[0],\n        setSearch = _useState2[1];\n\n  const searchQuery = event => {\n    setSearch(event.target.value);\n    filterByTerm(event.target.value);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"search-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"search-bar\",\n    value: search,\n    onChange: searchQuery,\n    type: \"text\",\n    placeholder: \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/JMcGehee/Documents/code_for_denver/ideaLab/src/components/Queue/components/SearchBar.jsx"],"names":["React","useState","SearchBar","filterByTerm","search","setSearch","searchQuery","event","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA,oBACXF,QAAQ,CAAC,EAAD,CADG;AAAA;AAAA,QAChCG,MADgC;AAAA,QACxBC,SADwB;;AAGpC,QAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3BF,IAAAA,SAAS,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACAN,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACH,GAHD;;AAKH,SACO;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACI,IAAA,SAAS,EAAC,YADd;AAEI,IAAA,KAAK,EAAEL,MAFX;AAGI,IAAA,QAAQ,EAAEE,WAHd;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,WAAW,EAAC,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADP;AAWA,CAnBD;;AAqBA,eAAeJ,SAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst SearchBar = ({ filterByTerm }) => {\n\tconst [search, setSearch] = useState('');\n\n    const searchQuery = (event) => {\n        setSearch(event.target.value);\n        filterByTerm(event.target.value);\n    }\n\n\treturn (\n        <div className='search-container'>\n        <input\n            className='search-bar'\n            value={search}\n            onChange={searchQuery}\n            type='text'\n            placeholder='Search'\n        />\n        </div>\n\t);\n};\n\nexport default SearchBar;\n\n\n"]},"metadata":{},"sourceType":"module"}